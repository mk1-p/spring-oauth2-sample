spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: {google-client-id} #(클라이언트 ID)
            client-secret: {google-client-secret} #(클라이언트 보안 비밀번호)
            scope:
              - profile
              - email
          kakao:
            client-id: {kakao-client-id}

            # Spring OAuth2 기본 리다이렉트 url 형태 ( {base-url}/login/oauth2/code/{registrationId} )
            redirect-uri: http://localhost:8080/login/oauth2/code/{registrationId}
            authorization-grant-type: authorization_code
            client-name: kakao
            # POST 로 작성하기도 하지만 (Spring security 5.6 이전 버전 ~5.5)
            # 현재 버전(6.1.1)에서는 client_secret_post 로 해야 적용이됨
            # client-authentication-method: POST
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - profile_image
              - account_email

        # OAuth 사용에 필요한 값에 대한 매핑 정보
        provider:
          google:
            authorizationUri: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            # 카카오가 회원정보를 json으로 넘겨주는데, id라는 키값으로 리턴해준다.
            userNameAttribute: id
            jwkSetUri: https://kauth.kakao.com/oauth/token

